<project name="build-distribution" default="" basedir=".">

	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

	<property name="tcserver.version" value="3.2.5.RELEASE" />
	<property name="sts-rootfolder" value="sts-bundle" />
	<property name="tcserver.name" value="pivotal-tc-server-developer-${tcserver.version}" />
	<property name="tcserver.root" value="http://dist.springsource.com/release/STS/bundle" />

	<property name="product.build.directory.sts" value="${project.build.directory}/../../../features/${product.folder.sts}/target/products/" />

    <condition property="tar-command" value="tar">
        <os family="mac" />
    </condition>

    <condition property="tar-command" value="tar">
	    <os family="unix" />
    </condition>

	<target name="create-bundled-distribution-sts">
		<antcall target="download-tcserver"/>

		<antcall target="create-sts-bundle-archive-tar">
			<param name="path" value="org.springsource.sts.ide/macosx/cocoa/x86_64"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-macosx-cocoa-x86_64.tar.gz"/>
		</antcall>

		<antcall target="create-sts-bundle-archive-tar">
			<param name="path" value="org.springsource.sts.ide/linux/gtk/x86"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-linux-gtk.tar.gz"/>
		</antcall>

		<antcall target="create-sts-bundle-archive-tar">
			<param name="path" value="org.springsource.sts.ide/linux/gtk/x86_64"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-linux-gtk-x86_64.tar.gz"/>
		</antcall>

		<antcall target="create-sts-bundle-archive-zip">
			<param name="path" value="org.springsource.sts.ide/win32/win32/x86"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-win32.zip"/>
		</antcall>

		<antcall target="create-sts-bundle-archive-zip">
			<param name="path" value="org.springsource.sts.ide/win32/win32/x86_64"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-win32-x86_64.zip"/>
		</antcall>
	</target>

	<target name="create-bundled-distribution-sts-e45">
		<antcall target="download-tcserver"/>

		<antcall target="create-sts-bundle-archive-tar-osx">
			<param name="path" value="org.springsource.sts.ide/macosx/cocoa/x86_64"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-macosx-cocoa-x86_64.tar.gz"/>
		</antcall>

		<antcall target="create-sts-bundle-archive-tar">
			<param name="path" value="org.springsource.sts.ide/linux/gtk/x86"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-linux-gtk.tar.gz"/>
		</antcall>

		<antcall target="create-sts-bundle-archive-tar">
			<param name="path" value="org.springsource.sts.ide/linux/gtk/x86_64"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-linux-gtk-x86_64.tar.gz"/>
		</antcall>

		<antcall target="create-sts-bundle-archive-zip">
			<param name="path" value="org.springsource.sts.ide/win32/win32/x86"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-win32.zip"/>
		</antcall>

		<antcall target="create-sts-bundle-archive-zip">
			<param name="path" value="org.springsource.sts.ide/win32/win32/x86_64"/>
			<param name="destName" value="${project.build.directory}/spring-tool-suite-${unqualifiedVersion}.${p2.qualifier}-${dist.target}-win32-x86_64.zip"/>
		</antcall>
	</target>

	<target name="create-sts-bundle-archive-tar">
		<exec executable="${tar-command}">
			<arg value="--transform"/>
			<arg value="s,^,${sts-rootfolder}/,S"/>
			<arg value="-czf"/>
			<arg value="${destName}"/>
			<arg value="-C"/>
			<arg value="${project.build.directory}"/>
			<arg value="${tcserver.name}"/>
			<arg value="-C"/>
			<arg value="${product.build.directory.sts}/${path}"/>
			<arg value="sts-${unqualifiedVersion}.${p2.qualifier}"/>
			<arg value="-C"/>
			<arg value="${project.build.directory}/.."/>
			<arg value="legal"/>
		</exec>

		<checksum file="${destName}" algorithm="SHA1" fileext=".sha1" />
		<checksum file="${destName}" algorithm="MD5" fileext=".md5" />

	</target>

		<target name="create-sts-bundle-archive-tar-osx">
			<exec executable="${tar-command}">
				<arg value="--transform"/>
				<arg value="s,^,${sts-rootfolder}/,S"/>
				<arg value="-czf"/>
				<arg value="${destName}"/>
				<arg value="-C"/>
				<arg value="${project.build.directory}"/>
				<arg value="${tcserver.name}"/>
				<arg value="-C"/>
				<arg value="${product.build.directory.sts}/${path}"/>
				<arg value="STS.app"/>
				<arg value="-C"/>
				<arg value="${project.build.directory}/.."/>
				<arg value="legal"/>
			</exec>

			<checksum file="${destName}" algorithm="SHA1" fileext=".sha1" />
			<checksum file="${destName}" algorithm="MD5" fileext=".md5" />

		</target>

	<target name="create-sts-bundle-archive-zip">
		<zip destfile="${destName}">
			<zipfileset dir="${product.build.directory.sts}/${path}/sts-${unqualifiedVersion}.${p2.qualifier}" prefix="${sts-rootfolder}/sts-${unqualifiedVersion}.${p2.qualifier}"/>
			<zipfileset dir="${project.build.directory}/${tcserver.name}" prefix="${sts-rootfolder}/${tcserver.name}"/>
			<zipfileset dir="${project.build.directory}/../legal" prefix="${sts-rootfolder}/legal"/>
		</zip>

		<checksum file="${destName}" algorithm="SHA1" fileext=".sha1" />
		<checksum file="${destName}" algorithm="MD5" fileext=".md5" />

	</target>

	<target name="download-tcserver">
		<get src="${tcserver.root}/${tcserver.name}.zip"
		 dest="${project.build.directory}/${tcserver.name}.zip"
		 verbose="true"
		 skipexisting="true"/>
		<if>
			<available file="${project.build.directory}/${tcserver.name}.zip" />
			<then>
				<exec executable="unzip">
				    <arg line="-o ${project.build.directory}/${tcserver.name}.zip -d ${project.build.directory}" />
				</exec>
			</then>
		</if>
	</target>

</project>
